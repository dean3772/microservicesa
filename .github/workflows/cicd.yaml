name: CI/CD
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
on:
  push:
    branches:
      - main

jobs:
  build-locally:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        # python -m venv venv
        # source venv/bin/activate
        pip install -r requirements.txt


  # test-locally:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v2

  #   - name: Set up Python
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: 3.9
  #   - name: Install dependencies
  #     run: |
  #       # python -m venv venv
  #       # source venv/bin/activate
  #       pip install -r requirements.txt
  #       pytest $(pwd)/test_app.py

  # - name: Run tests
  #   run: python -m pytest


  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: dockerfile.health_check
      run: docker build . --file dockerfile.health_check --tag $IMAGE_NAME/health_check --label "runnumber=${GITHUB_RUN_ID}"
    - name: Build dockerfile.resty
      run: docker build . --file dockerfile.resty --tag $IMAGE_NAME/resty --label "runnumber=${GITHUB_RUN_ID}"

    - name: Log in to registry
      # This is where you will update the personal access token to GITHUB_TOKEN
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION


    # - name: Run tests
    #   run: python -m pytest
      
  # deploy:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   needs: build
  #   steps:
    # - name: Deploy to test environment
    #   run: |
    #     kubectl apply -f k8s/test 
    # or argocd etc

#token
# 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
#export CR_PAT=YOUR_TOKEN
# export CR_PAT=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
#adding lint and snyk etc 
# adding the terraform in this repo too (in realk life the terraform in other reop in most cases)
#changing to env not hardcoding secrets etc
# drininkg coffie etc 
# 